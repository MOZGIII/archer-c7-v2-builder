#!/bin/bash
set -euo pipefail
cd "$(dirname "${BASH_SOURCE[0]}")/.."
DIR="$(pwd)"
CUID="$(id -u)"
CGID="$(id -g)"

export BUILD_CFG_BUILDER_PATH="/builder"
export BUILD_CFG_BUILD_PATH="/build"

ENV_VARS=("${!BUILD_CFG_@}")

BUILDER_IMAGE="${BUILDER_IMAGE:-"mozgiii/openwrt-image-builder"}"
ULIMIT_STACK="-1"
ULIMIT_NOFILE="$((1000 * 1024))"

ARGS=(
  "--rm"
  "-i"
  "--net=host"
  "--mount" "type=bind,source=$DIR/build,target=$BUILD_CFG_BUILD_PATH"
  "--mount" "type=bind,source=$DIR,target=$BUILD_CFG_BUILDER_PATH,readonly"
  "--user" "$CUID:$CGID"
  "--init"
  "--ulimit" "stack=$ULIMIT_STACK:$ULIMIT_STACK"
  "--ulimit" "nofile=$ULIMIT_NOFILE:$ULIMIT_NOFILE"
)

for ENV_VAR in "${ENV_VARS[@]}"; do
  ARGS+=("--env" "$ENV_VAR")
done

if [[ -n "${WORKDIR:-}" ]]; then
  ARGS+=("-w" "$WORKDIR")
fi

mkdir -p "$DIR/build"
set -x
docker run \
  "${ARGS[@]}" \
  "$BUILDER_IMAGE" \
  "$@"
